<Window x:Class="Server.UtilityWindows.RemoteDesktop" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:header="clr-namespace:Server.UI.CustomControls.WindowHeaders"
        xmlns:helpers="clr-namespace:Server.UI.Style.Common.CommonHelper"
        Title="Remote Desktop - Fusion" UseLayoutRounding="True" TextOptions.TextFormattingMode="Display" WindowStyle="None" AllowsTransparency="True" WindowStartupLocation="CenterScreen"
        MinHeight="420" MinWidth="700" Height="600" Width="1000" Foreground="{DynamicResource Text}" Background="Transparent">
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="2.2" CornerRadius="0" GlassFrameThickness="0" ResizeBorderThickness="5"/>
    </WindowChrome.WindowChrome>

    <Window.Resources>

        <Style TargetType="{x:Type ToggleButton}" x:Key="ToggleButtonBase">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid>
                            <Border Background="{TemplateBinding Background}"
                                    CornerRadius="5"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}" x:Name="brd">

                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="Background" TargetName="brd" Value="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonBase}" x:Key="startTBTN">
            <Setter Property="Background" Value="#2AB055"/>
            <Setter Property="Tag" Value="#FC5B5B"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Width" Value="83"/>
        </Style>




        <Style x:Key="CheckboxToggle" TargetType="ToggleButton">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Border x:Name="toggleSwitchBackground" Width="40" Height="20" CornerRadius="10" BorderThickness="1" BorderBrush="{DynamicResource Border}">
                                <Border.Background>
                                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                                        <GradientStop  x:Name="toggleSwitchBackgroundGradentStop" Color="#00125D97" Offset="0.0"/>
                                        <GradientStop x:Name="toggleSwitchBackgroundGradientStop" Color="#001E9BFD" Offset="1.0"/>
                                    </LinearGradientBrush>
                                </Border.Background>
                            </Border>
                            <Ellipse x:Name="toggleSwitch" Fill="#373737" Width="14" Height="14" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Ellipse.RenderTransform>
                                    <TranslateTransform X="4" Y="-1"/>
                                </Ellipse.RenderTransform>
                            </Ellipse>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsChecked" Value="True"/>
                                </MultiTrigger.Conditions>
                                <MultiTrigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="toggleSwitch"
                                             Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                             To="22" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ColorAnimation Storyboard.TargetName="toggleSwitchBackgroundGradientStop"
                                                Storyboard.TargetProperty="Color"
                                                To="#1E9BFD" Duration="0:0:0.4">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>

                                            <ColorAnimation Storyboard.TargetName="toggleSwitchBackgroundGradentStop"
                                                Storyboard.TargetProperty="Color"
                                                To="#125D97" Duration="0:0:0.4">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.EnterActions>
                                <MultiTrigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="toggleSwitch"
                                                 Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                 To="4" Duration="0:0:0.3">
                                                <DoubleAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                            <ColorAnimation Storyboard.TargetName="toggleSwitchBackgroundGradientStop"
                                                Storyboard.TargetProperty="Color"
                                                To="#001E9BFD" Duration="0:0:0.4">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>

                                            <ColorAnimation Storyboard.TargetName="toggleSwitchBackgroundGradentStop"
                                                Storyboard.TargetProperty="Color"
                                                To="#00125D97" Duration="0:0:0.4">
                                                <ColorAnimation.EasingFunction>
                                                    <QuadraticEase EasingMode="EaseInOut"/>
                                                </ColorAnimation.EasingFunction>
                                            </ColorAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </MultiTrigger.ExitActions>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="Common_ComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <!-- ToggleButton content style -->
                            <ToggleButton IsChecked="{Binding Path=IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Style>
                                    <Style TargetType="{x:Type ToggleButton}">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                    <Border x:Name="brd" Background="#202020" CornerRadius="5">
                                                        <ContentPresenter Content="{TemplateBinding Tag}" />
                                                    </Border>
                                                    <ControlTemplate.Triggers>
                                                        <Trigger Property="IsChecked" Value="True">
                                                            <Setter Property="CornerRadius" Value="5,5,0,0" TargetName="brd"/>
                                                        </Trigger>
                                                    </ControlTemplate.Triggers>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </ToggleButton.Style>

                                <ToggleButton.Tag>
                                    <TextBlock Name="ContentSite"
                                           IsHitTestVisible="False"
                                           Text="{TemplateBinding SelectionBoxItem}"
                                           VerticalAlignment="Center"
                                           HorizontalAlignment="Left"
                                           Margin="11,0,0,1"
                                           FontSize="13" Foreground="#fff"/>
                                </ToggleButton.Tag>

                            </ToggleButton>

                            <Popup IsOpen="{TemplateBinding IsDropDownOpen}"
                               Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}"
                               AllowsTransparency="True"
                               Focusable="True"
                               PopupAnimation="Slide" 
                               VerticalOffset="1"
                               StaysOpen="True"
                               Placement="Bottom">

                                <Border CornerRadius="0,0,5,5" MaxHeight="60" Background="#202020">
                                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" SnapsToDevicePixels="True" CanContentScroll="False">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                    </ScrollViewer>
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="item" 
                            BorderThickness="2"
                            Height="28"
                            CornerRadius="5"
                            Background="Transparent"
                            Margin="0,0,0,2">
                            <TextBlock Text="{TemplateBinding Content}" FontSize="13" FontWeight="Medium" Foreground="#fff" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="11,0,0,1" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="item" Value="#3A3A3A"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="BorderBrush" TargetName="item" Value="#4B4990"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border CornerRadius="5"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}" Cursor="Hand">
                            <ContentPresenter/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Border Background="Transparent">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <!-- TitleBar -->
            <Border CornerRadius="5,5,0,0" Panel.ZIndex="2" Background="{DynamicResource Primary}" MouseLeftButtonDown="TitleBar_MouseLeftButtonDown" MouseMove="TitleBar_MouseMove" MouseLeftButtonUp="TitleBar_MouseLeftButtonUp">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                        <Image Source="/UI/Assets/Icons/Logo.png" Margin="10,0,6,0" Width="18" VerticalAlignment="Top" />
                        <TextBlock Text="Fusion - Remote Desktop | " FontSize="13" FontWeight="SemiBold"/>

                        <!--FPS textbloxk-->
                        <TextBlock Text="60 FPS" FontSize="13" x:Name="fpsTblock"/>
                        <TextBlock Text=" : " FontSize="13"/>
                        
                        <!--MS textbloxk-->
                        <TextBlock Text="30 MS" FontSize="13" x:Name="msTblock"/>
                    </StackPanel>

                    <Button Style="{StaticResource ButtonAnimationStyle}" Grid.Column="1" Width="44" VerticalAlignment="Top" Height="27" Click="MinimizeButton_Click">
                        <Button.Content>
                            <Border x:Name="minimizeBG" Background="Transparent">
                                <Path VerticalAlignment="Center" Height="2" Width="13" Fill="{DynamicResource Icon}" Stretch="Uniform" Data="m90.625 53.125h-81.25c-1.7188 0-3.125-1.4062-3.125-3.125s1.4062-3.125 3.125-3.125h81.25c1.7188 0 3.125 1.4062 3.125 3.125s-1.4062 3.125-3.125 3.125z"/>
                            </Border>
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource ButtonAnimationStyle}" Grid.Column="2" Width="44" VerticalAlignment="Top" Height="27" Click="MaximizeButton_Click">
                        <Button.Content>
                            <Border x:Name="maximizeBG" Background="Transparent">
                                <Path VerticalAlignment="Center" Width="11" Fill="{DynamicResource Icon}" Stretch="Uniform" Data="m 607.00069,453.00215 a 1.0001,1.0001 0 0 0 -1,1 v 38 a 1.0001,1.0001 0 0 0 1,1 h 38 a 1.0001,1.0001 0 0 0 1,-1 v -38 a 1.0001,1.0001 0 0 0 -1,-1 z m 1,2 h 36 v 36 h -36 z"/>
                            </Border>
                        </Button.Content>
                    </Button>
                    <Button Style="{StaticResource ButtonAnimationStyle}" Grid.Column="3" Width="44" VerticalAlignment="Top" Height="27" Click="CloseButton_Click">
                        <Button.Content>
                            <Border x:Name="closeBG" Background="Transparent">
                                <Path VerticalAlignment="Center" Width="11" Fill="{DynamicResource Icon}" Stretch="Uniform" Data="M 39.486328 6.9785156 A 1.50015 1.50015 0 0 0 38.439453 7.4394531 L 24 21.878906 L 9.5605469 7.4394531 A 1.50015 1.50015 0 0 0 8.484375 6.984375 A 1.50015 1.50015 0 0 0 7.4394531 9.5605469 L 21.878906 24 L 7.4394531 38.439453 A 1.50015 1.50015 0 1 0 9.5605469 40.560547 L 24 26.121094 L 38.439453 40.560547 A 1.50015 1.50015 0 1 0 40.560547 38.439453 L 26.121094 24 L 40.560547 9.5605469 A 1.50015 1.50015 0 0 0 39.486328 6.9785156 z"/>
                            </Border>
                        </Button.Content>
                    </Button>
                </Grid>
            </Border>

            <!--//Main-->
            <Border Grid.Row="1"
                    Background="{DynamicResource Secondary}"
                    x:Name="main">
                <Grid>

                    <Image x:Name="frame" Stretch="Fill" Panel.ZIndex="-1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

                    <ToggleButton Background="{DynamicResource Primary}"
                                  Height="14"
                                  Width="75"
                                  Margin="0,0,0,5"
                                  VerticalAlignment="Bottom"
                                  Style="{StaticResource ToggleButton}">
                        <ToggleButton.Triggers>
                            <EventTrigger RoutedEvent="ToggleButton.Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="icon"
                                                         Storyboard.TargetProperty="(Path.LayoutTransform).(RotateTransform.Angle)"
                                                         To="-90" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="main"
                                                                       Storyboard.TargetProperty="CornerRadius">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.1">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="5" BottomRight="5" TopLeft="0" TopRight="0"/>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimation Storyboard.TargetName="controlPanel"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0" Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="icon"
                                                         Storyboard.TargetProperty="(Path.LayoutTransform).(RotateTransform.Angle)"
                                                         To="90" Duration="0:0:0.2">
                                            <DoubleAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </DoubleAnimation.EasingFunction>
                                        </DoubleAnimation>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetName="main"
                                                                   Storyboard.TargetProperty="CornerRadius">
                                            <ObjectAnimationUsingKeyFrames.KeyFrames>
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <CornerRadius BottomLeft="0" BottomRight="0" TopLeft="0" TopRight="0" />
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames.KeyFrames>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ThicknessAnimation Storyboard.TargetName="controlPanel"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0,0,0,-50" Duration="0:0:0.2">
                                            <ThicknessAnimation.EasingFunction>
                                                <QuadraticEase EasingMode="EaseInOut"/>
                                            </ThicknessAnimation.EasingFunction>
                                        </ThicknessAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ToggleButton.Triggers>
                        <Path Fill="#fff" x:Name="icon" Height="11" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Data="M13.071,12L9.25,8.179c-0.414-0.414-0.414-1.086,0-1.5l0,0c0.414-0.414,1.086-0.414,1.5,0l4.614,4.614 c0.391,0.391,0.391,1.024,0,1.414l-4.614,4.614c-0.414,0.414-1.086,0.414-1.5,0h0c-0.414-0.414-0.414-1.086,0-1.5L13.071,12z">
                            <Path.RenderTransformOrigin>
                                <Point X="0.5" Y="0.5"/>
                            </Path.RenderTransformOrigin>
                            <Path.LayoutTransform>
                                <RotateTransform Angle="90"/>
                            </Path.LayoutTransform>
                        </Path>
                    </ToggleButton>
                </Grid>
            </Border>

            <!--//ControlPanel-->
            <Border Grid.Row="1"
                    Background="{DynamicResource Secondary}"
                    BorderBrush="{DynamicResource Border}"
                    BorderThickness="0,1,0,0"
                    Height="50"
                    VerticalAlignment="Bottom"
                    Margin="0,-50"
                    Panel.ZIndex="-1"
                    x:Name="controlPanel"
                    CornerRadius="0,0,5,5">
                
                    <Grid Margin="11,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition MinWidth="60"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <StackPanel Orientation="Horizontal">

                        <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Screen:" VerticalAlignment="Center" Margin="0,0,11,0"/>
                                <ComboBox Style="{StaticResource Common_ComboBox}" x:Name="screenControlComboBox" Width="103" Height="28" SelectedIndex="0" SelectionChanged="screenControlComboBox_SelectionChanged">
                                
                                </ComboBox>
                            
                            
                            </StackPanel>
                        </StackPanel>

                        <StackPanel Orientation="Horizontal"
                                    Grid.Column="2">

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Black screen:" VerticalAlignment="Center" Margin="0,0,11,0"/>
                                <ToggleButton Style="{StaticResource CheckboxToggle}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal" Margin="22,0">
                                <TextBlock Text="Mouse:" VerticalAlignment="Center" Margin="0,0,11,0"/>
                                <ToggleButton Style="{StaticResource CheckboxToggle}"/>
                            </StackPanel>

                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Keyboard:" VerticalAlignment="Center" Margin="0,0,11,0"/>
                                <ToggleButton Style="{StaticResource CheckboxToggle}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>
            </Border>

        </Grid>
    </Border>
</Window>
